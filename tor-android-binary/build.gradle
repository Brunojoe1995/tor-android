apply plugin: 'com.android.library'

/* gets the version name from the latest Git tag, stripping the leading 'tor-' off */
def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', '-C', '../external/tor', 'describe', '--tags', '--always'
        standardOutput = stdout
    }
    return stdout.toString().trim().substring(4)
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 41500
        versionName getVersionName()

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        /*
          The Android Testing Support Library collects analytics to continuously improve the testing
          experience. More specifically, it uploads a hash of the package name of the application
          under test for each invocation. If you do not wish to upload this data, you can opt-out by
          passing the following argument to the test runner: disableAnalytics "true".
         */
        testInstrumentationRunnerArguments disableAnalytics: 'true'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/androidx.localbroadcastmanager_localbroadcastmanager.version'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.so'])
    api 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    api 'info.guardianproject:jtorctl:0.4'

    androidTestImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'info.guardianproject.netcipher:netcipher:2.1.0'
    androidTestImplementation 'commons-io:commons-io:2.6'
    androidTestImplementation 'commons-net:commons-net:3.6'
}

apply plugin: 'maven'

uploadArchives {
    repositories.mavenDeployer {
        def deployPath = file(getProperty('aar.deployPath'))
        repository(url: "file://${deployPath.absolutePath}")
        pom.project {
            groupId 'org.torproject'
            artifactId 'tor-android-binary'
            version getVersionName()
        }
    }
}


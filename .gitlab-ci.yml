image: registry.gitlab.com/fdroid/ci-images-client:latest

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

variables:
  wget: "wget --quiet --tries=0"

before_script:
  - export GRADLE_USER_HOME=$PWD/.gradle
  - export ANDROID_COMPILE_SDK=`sed -n 's,.*compileSdkVersion\s*\([0-9][0-9]*\).*,\1,p' tor-android-binary/build.gradle`
  - export BUILD_TOOLS_VERSION=`sed -nE 's,.*buildToolsVersion *.([0-9.]+).*,\1,p' tor-android-binary/build.gradle`
  - echo y | sdkmanager
      "platforms;android-${ANDROID_COMPILE_SDK}"
      "build-tools;$BUILD_TOOLS_VERSION"
      > /dev/null
  - rm -rf $PWD/android-ndk*
  - ndk="android-ndk-r20"
  - ndk_zip="${ndk}-linux-x86_64.zip"
  - $wget http://dl.google.com/android/repository/$ndk_zip
  - echo "57435158f109162f41f2f43d5563d2164e4d5d0364783a9a6fab3ef12cb06ce0  $ndk_zip" > ${ndk_zip}.sha256
  - sha256sum -c ${ndk_zip}.sha256
  - unzip -q $ndk_zip
  - export ANDROID_NDK_HOME=`pwd`/$ndk

  - export AVD_SDK=`echo $CI_JOB_NAME | awk '{print $2}'`
  - export AVD_TAG=`echo $CI_JOB_NAME | awk '{print $3}'`
  - export AVD_ARCH=`echo $CI_JOB_NAME | awk '{print $4}'`
  - export AVD_PACKAGE="system-images;android-${AVD_SDK};${AVD_TAG};${AVD_ARCH}"
  - echo $AVD_PACKAGE


.test-template: &test-template
  artifacts:
    name: "${CI_PROJECT_PATH}_${CI_JOB_STAGE}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA}"
    paths:
      - tor-android-binary/src/main/libs
      - external/include
      - external/lib
      - external/test
    expire_in: 1 week
    when: always
  after_script:
    - echo "Download debug artifacts from https://gitlab.com/${CI_PROJECT_PATH}/-/jobs"


android 22 default armeabi-v7a:
  <<: *test-template
  script:
    - apt-get update
    - apt-get -qy install
        autoconf
        autogen
        automake
        autopoint
        autotools-dev
        gettext-base
        git
        libtool
        make
        patch
        pkg-config

    - git submodule foreach git reset --hard
    - git submodule foreach git clean -fdx
    - git submodule sync
    - git submodule update --init --force

    - export V=0
    - ./tor-droid-make.sh build
    - for f in tor-android-binary/src/main/libs/*/libtor.so; do sha256sum $f; done

    - grep -v '^License' $ANDROID_HOME/system-images/android-$AVD_SDK/$AVD_TAG/$AVD_ARCH/source.properties
    - adb start-server
    - start-emulator
    - wait-for-emulator
    - adb devices
    - adb shell input keyevent 82 &

    # adb shell on older emulators didn't pass the return value, so we need tricks
    # https://stackoverflow.com/a/58452689
    - EXITVALUE=0
    - for f in test test-memwipe test-slow; do
        printf "\n\n------------------------------------------\n$f\n";
        adb -e push external/test/$AVD_ARCH/$f /data/local/tmp/;
        adb -e shell "cd /data/local/tmp; ./$f"'; echo -n $? > '"$f.result";
        test `adb -e shell "cat /data/local/tmp/$f.result"` = "0" || EXITVALUE=1;
      done
    - exit $EXITVALUE


after_script:
    # this file changes every time but should not be cached
    - rm -f $GRADLE_USER_HOME/caches/modules-2/modules-2.lock
    - rm -fr $GRADLE_USER_HOME/caches/*/plugin-resolution/
